# JMH version: 1.23
# VM version: JDK 1.8.0_221, Java HotSpot(TM) 64-Bit Server VM, 25.221-b11
# VM invoker: D:\devSoft\java\jdk_8\jre\bin\java.exe
# VM options: -javaagent:D:\devSoft\ide\idea\lib\idea_rt.jar=24722:D:\devSoft\ide\idea\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: lost.canvas.disruptor.benchmark.DisruptorBenchmark.useDisruptor
# Parameters: (consumeTimeUse = 10)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.005 ops/s
Iteration   1: 0.005 ops/s
Iteration   2: 0.005 ops/s
Iteration   3: 0.005 ops/s
Iteration   4: 0.005 ops/s
Iteration   5: 0.005 ops/s


Result "lost.canvas.disruptor.benchmark.DisruptorBenchmark.useDisruptor":
  0.005 ±(99.9%) 0.001 ops/s [Average]
  (min, avg, max) = (0.005, 0.005, 0.005), stdev = 0.001
  CI (99.9%): [0.005, 0.005] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 1.8.0_221, Java HotSpot(TM) 64-Bit Server VM, 25.221-b11
# VM invoker: D:\devSoft\java\jdk_8\jre\bin\java.exe
# VM options: -javaagent:D:\devSoft\ide\idea\lib\idea_rt.jar=24722:D:\devSoft\ide\idea\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: lost.canvas.disruptor.benchmark.DisruptorBenchmark.useDisruptor
# Parameters: (consumeTimeUse = 100)

# Run progress: 50.00% complete, ETA 00:19:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ops/s
Iteration   1: 0.003 ops/s
Iteration   2: 0.003 ops/s
Iteration   3: 0.003 ops/s
Iteration   4: 0.003 ops/s
Iteration   5: 0.003 ops/s


Result "lost.canvas.disruptor.benchmark.DisruptorBenchmark.useDisruptor":
  0.003 ±(99.9%) 0.001 ops/s [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)


# Run complete. Total time: 00:48:24

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                        (consumeTimeUse)   Mode  Cnt  Score    Error  Units
DisruptorBenchmark.useDisruptor                10  thrpt    5  0.005 ±  0.001  ops/s
DisruptorBenchmark.useDisruptor               100  thrpt    5  0.003 ±  0.001  ops/s
